{"version":3,"sources":["Snow.js","Rain.js","Wind.js","Sun.js","Login.js","Player.js","Playlist.js","Main.js","index.js"],"names":["container","card","innerSVG","outerSVG","summary","weatherContainer","innerSnowHolder","outerSnowHolder","clouds","innerRainHolder","innerLeafHolder","leafMask","leaf","outerLeafHolder","sun","Login","className","id","href","Component","sizes","width","height","settings","windSpeed","snowCount","cloudHeight","cloudSpace","cloudArch","renewCheck","tickCount","snow","Snow","props","tick","length","makeSnow","i","offset","group","transform","requestAnimationFrame","onResize","attr","onSnowEnd","flake","remove","paper","splice","state","temp","this","Math","random","drawCloud","TweenMax","killTweensOf","to","opacity","x","onComplete","updateSummaryText","ease","Power4","easeIn","Power2","easeInOut","cloud","arch","points","push","join","path","animate","d","newSnow","endY","scale","y","circle","fill","top","left","fromTo","node","onCompleteParams","Power0","Power1","repeat","yoyo","html","easeOut","Snap","select","$","weatherAnimations","date","Date","getDay","getDate","getMonth","rainCount","splashBounce","rain","Rain","makeRain","onRainEnd","line","type","addClass","lineWidth","stroke","strokeWidth","delay","leafCount","leafs","Wind","makeLeaf","onLeafEnd","gsap","newLeaf","areaY","colors","color","floor","clone","appendTo","rotation","rect","Sun","style","cx","cy","r","Player","token","playlistUri","deviceId","loggedIn","error","trackName","artistName","albumName","playing","position","duration","connected","playerCheckInterval","setState","setInterval","checkForPlayer","window","Spotify","undefined","clearInterval","player","name","getOAuthToken","cb","createEventHandlers","connect","on","e","console","onStateChanged","data","a","device_id","log","playAtmospherePlaylist","transferPlayback","track_window","currentTrack","current_track","album","artists","map","artist","paused","previousTrack","togglePlay","nextTrack","fetch","method","headers","authorization","body","JSON","stringify","device_ids","play","context_uri","handleLogin","Container","fluid","Row","Col","onClick","onPrevClick","src","alt","onPlayClick","onNextClick","Playlist","tracks","albums","albumArt","playlistId","split","then","response","json","items","forEach","item","track","images","url","getTracksInPlaylist","Card","Header","Body","Main","authToken","displayName","weatherCard","zipCode","borderBottom","marginBottom","Navbar","Text","Toggle","Collapse","getWeatherCard","params","hashParams","q","location","hash","substring","exec","decodeURIComponent","getHashParams","ReactDOM","render","exact","document","getElementById"],"mappings":"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","file":"static/js/main.3561d854.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Snap from \"snapsvg-cjs\";\r\nimport $ from \"jquery\";\r\nimport { TweenMax, Power0, Power1, Power2, Power4 } from \"gsap\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './weather.scss';\r\n\r\n// 📝 Fetch all DOM nodes in jQuery and Snap SVG\r\nvar container;\r\nvar card;\r\nvar innerSVG;\r\nvar outerSVG;\r\nvar summary;\r\nvar weatherContainer;\r\nvar innerSnowHolder;\r\nvar outerSnowHolder;\r\n\r\nvar sizes = {\r\n    container: {width: 0, height: 0},\r\n    card: {width: 0, height: 0}\r\n}\r\n\r\n// grab cloud groups\r\nvar clouds;\r\n\r\n// app settings\r\n// in an object so the values can be animated in tweenmax\r\nconst settings = {\r\n    windSpeed: 2,\r\n    snowCount: 0,\r\n    cloudHeight: 100,\r\n    cloudSpace: 30,\r\n    cloudArch: 50,\r\n    renewCheck: 10,\r\n};\r\n\r\nvar tickCount = 0;\r\nvar snow = [];\r\n\r\nclass Snow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            temp: props.temp\r\n        }\r\n    }\r\n    \r\n    weatherAnimations() {\r\n        this.onResize();\r\n\r\n        // draw clouds\r\n        for(let i = 0; i < clouds.length; i++) {\r\n            clouds[i].offset = Math.random() * sizes.card.width;\r\n            this.drawCloud(clouds[i], i);\r\n        }\r\n        \r\n        TweenMax.killTweensOf(summary);\r\n        TweenMax.to(summary, 1, {opacity: 0, x: -30, onComplete: this.updateSummaryText, ease: Power4.easeIn})\r\n\r\n        // snowCount\r\n        TweenMax.to(settings, 3, {snowCount: 40, ease: Power2.easeInOut});\r\n\r\n        // 🏃 start animations\r\n        requestAnimationFrame(this.tick);\r\n    }\r\n\r\n    tick = () => {\r\n        tickCount++;\r\n        var check = tickCount % settings.renewCheck;\r\n        \r\n        if(check) {\r\n            if(snow.length < settings.snowCount) {\r\n                this.makeSnow();\r\n            }\r\n        }\r\n        \r\n        for(let i = 0; i < clouds.length; i++) {\r\n                clouds[i].offset += settings.windSpeed / (i + 1);\r\n                if(clouds[i].offset > sizes.card.width) clouds[i].offset = 0 + (clouds[i].offset - sizes.card.width);\r\n                clouds[i].group.transform('t' + clouds[i].offset + ',' + 0);\r\n        }\r\n        \r\n        requestAnimationFrame(this.tick);\r\n    }\r\n\r\n    onResize = () => {\r\n        // 📏 grab window and card sizes \r\n        sizes.container.width = container.width();\r\n        sizes.container.height = container.height();\r\n        sizes.card.width = card.width();\r\n        sizes.card.height = card.height();\r\n        sizes.card.offset = card.offset();\r\n        \r\n        // 📐 update svg sizes\r\n        innerSVG.attr({\r\n            width: sizes.card.width,\r\n            height: sizes.card.height\r\n        })\r\n        \r\n        outerSVG.attr({\r\n            width: sizes.container.width,\r\n            height: sizes.container.height\r\n        })\t\r\n    }\r\n\r\n    drawCloud(cloud, i)\r\n    {\r\n        /* \r\n        ☁️ We want to create a shape thats loopable but that can also\r\n        be animated in and out. So we use Snap SVG to draw a shape\r\n        with 4 sections. The 2 ends and 2 arches the same width as\r\n        the card. So the final shape is about 4 x the width of the\r\n        card.\r\n        */\r\n        \r\n        var space  = settings.cloudSpace * i;\r\n        var height = space + settings.cloudHeight;\r\n        var arch = height + settings.cloudArch + (Math.random() * settings.cloudArch);\r\n        var width = sizes.card.width;\r\n        \r\n        var points = [];\r\n        points.push('M' + [-(width), 0].join(','));\r\n        points.push([width, 0].join(','));\r\n        points.push('Q' + [width * 2, height / 2].join(','));\r\n        points.push([width, height].join(','));\r\n        points.push('Q' + [width * 0.5, arch].join(','));\r\n        points.push([0, height].join(','));\r\n        points.push('Q' + [width * -0.5, arch].join(','));\r\n        points.push([-width, height].join(','));\r\n        points.push('Q' + [- (width * 2), height/2].join(','));\r\n        points.push([-(width), 0].join(','));\r\n        \r\n        var path = points.join(' ');\r\n\r\n        if(!cloud.path) {\r\n            cloud.path = cloud.group.path();\r\n        }\r\n\r\n        cloud.path.animate({\r\n            d: path\r\n        }, 0)\r\n    }\r\n\r\n    makeSnow() {\r\n        var scale = 0.5 + (Math.random() * 0.5);\r\n        var newSnow;\r\n        \r\n        var x = 20 + (Math.random() * (sizes.card.width - 40));\r\n        var y = -10;\r\n        var endY;\r\n        \r\n        if(scale > 0.8) {\r\n            newSnow = outerSnowHolder.circle(0, 0, 5)\r\n                .attr({\r\n                    fill: 'white'\r\n                })\r\n            endY = sizes.container.height + 10;\r\n            y = sizes.card.offset.top + settings.cloudHeight;\r\n            x =  x + sizes.card.offset.left;\r\n        }\r\n        else {\r\n            newSnow = innerSnowHolder.circle(0, 0 ,5)\r\n            .attr({\r\n                fill: 'white'\r\n            })\r\n            endY = sizes.card.height + 10;\r\n        }\r\n        \r\n        snow.push(newSnow);\r\n        \r\n        TweenMax.fromTo(newSnow.node, 3 + (Math.random() * 5), {x: x, y: y}, {y: endY, onComplete: this.onSnowEnd, onCompleteParams: [newSnow], ease: Power0.easeIn})\r\n        TweenMax.fromTo(newSnow.node, 1,{scale: 0}, {scale: scale, ease: Power1.easeInOut})\r\n        TweenMax.to(newSnow.node, 3, {x: x+((Math.random() * 150)-75), repeat: -1, yoyo: true, ease: Power1.easeInOut})\r\n    }\r\n\r\n    onSnowEnd = (flake) => {\r\n        flake.remove();\r\n        flake = null;\r\n        \r\n        for(let i in snow) {\r\n            if(!snow[i].paper) snow.splice(i, 1);\r\n        }\r\n        \r\n        if(snow.length < settings.snowCount) {\r\n            this.makeSnow();\r\n        }\r\n    }\r\n\r\n\r\n    updateSummaryText() {\r\n        summary.html(\"Snow\");\r\n        TweenMax.fromTo(summary, 1.5, {x: 30}, {opacity: 1, x: 0, ease: Power4.easeOut});\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get svg elements\r\n        weatherContainer = Snap.select('#layer1');\r\n        innerSVG = Snap('#inner');\r\n        outerSVG = Snap('#outer');\r\n        summary = $('#summary');\r\n        container = $('.container');\r\n        card = $('#card');           \r\n\r\n        // Grab cloud groups\r\n        clouds = [\r\n            {group: Snap.select('#cloud1')},\r\n            {group: Snap.select('#cloud2')},\r\n            {group: Snap.select('#cloud3')}\r\n        ]\r\n\r\n        // Snow\r\n        outerSnowHolder = outerSVG.group();\r\n        innerSnowHolder = weatherContainer.group();\r\n\r\n        this.weatherAnimations();\r\n    }\r\n\r\n    getDate(){\r\n        let date = new Date();\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        return `${days[date.getDay()]} ${date.getDate()} ${month[date.getMonth()]}`\r\n    }\r\n\r\n    render() {\r\n        const { temp } = this.state;\r\n        return (\r\n            <div className=\"background\">\r\n                <div className=\"container\">\t\r\n                    <div id=\"card\" className=\"weather\">\r\n                        <svg id=\"inner\">\r\n                            <g id=\"layer3\"></g>\r\n                            <g id=\"cloud3\" className=\"cloud\"></g>\r\n                            <g id=\"layer2\"></g>\r\n                            <g id=\"cloud2\" className=\"cloud\"></g>\r\n                            <g id=\"layer1\"></g>\r\n                            <g id=\"cloud1\" className=\"cloud\"></g>\r\n                        </svg>\r\n                        <div className=\"details\">\r\n                            <div className=\"temp\">\r\n                                {temp}\r\n                                <span>f</span></div>\r\n                            <div className=\"right\">\r\n                                <div id=\"date\">{this.getDate()}</div>\r\n                                <div id=\"summary\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <svg id=\"outer\"></svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Snow;","import React, { Component } from \"react\";\r\nimport Snap from \"snapsvg-cjs\";\r\nimport $ from \"jquery\";\r\nimport TweenMax from \"gsap\";\r\nimport Power2 from \"gsap\";\r\nimport Power4 from \"gsap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./weather.scss\";\r\n\r\n// 📝 Fetch all DOM nodes in jQuery and Snap SVG\r\nvar container;\r\nvar card;\r\nvar innerSVG;\r\nvar outerSVG;\r\nvar summary;\r\nvar weatherContainer;\r\nvar innerRainHolder;\r\n\r\nvar sizes = {\r\n\tcontainer: {\r\n\t\twidth: 0,\r\n\t\theight: 0,\r\n\t},\r\n\tcard: {\r\n\t\twidth: 0,\r\n\t\theight: 0,\r\n\t},\r\n};\r\n\r\n// grab cloud groups\r\nvar clouds;\r\n\r\n// app settings\r\n// in an object so the values can be animated in tweenmax\r\n\r\nconst settings = {\r\n\twindSpeed: 2,\r\n\trainCount: 0,\r\n\tcloudHeight: 100,\r\n\tcloudSpace: 30,\r\n\tcloudArch: 50,\r\n\trenewCheck: 10,\r\n\tsplashBounce: 80,\r\n};\r\n\r\nvar tickCount = 0;\r\nvar rain = [];\r\n\r\nclass Rain extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttemp: props.temp\r\n\t\t}\r\n\t}\r\n\r\n\tweatherAnimations() {\r\n\t\t//Yes, we can just throw it in the component\r\n\t\tthis.onResize();\r\n\r\n\t\t// draw clouds\r\n\t\tfor (let i = 0; i < clouds.length; i++) {\r\n\t\t\tclouds[i].offset = Math.random() * sizes.card.width;\r\n\t\t\tthis.drawCloud(clouds[i], i);\r\n\t\t}\r\n\r\n\t\tTweenMax.killTweensOf(summary);\r\n\t\tTweenMax.to(summary, 1, {\r\n\t\t\topacity: 0,\r\n\t\t\tx: -30,\r\n\t\t\tonComplete: this.updateSummaryText,\r\n\t\t\tease: Power4.easeIn,\r\n\t\t});\r\n\t\t// TweenMax.duration(summary, 1, {opacity: 0, x: -30, onComplete: this.updateSummaryText, ease: Power4.easeIn})\r\n\r\n\t\tcontainer.addClass(\"rain\");\r\n\r\n\t\t// RainCount\r\n\t\tTweenMax.to(settings, 3, {\r\n\t\t\trainCount: 10,\r\n\t\t\tease: Power2.easeInOut,\r\n\t\t});\r\n\r\n\t\t// 🏃 start animations\r\n\t\trequestAnimationFrame(this.tick);\r\n\t}\r\n\r\n\ttick = () => {\r\n\t\ttickCount++;\r\n\t\tvar check = tickCount % settings.renewCheck;\r\n\r\n\t\tif (check) {\r\n\t\t\tif (rain.length < settings.rainCount) {\r\n\t\t\t\tthis.makeRain();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < clouds.length; i++) {\r\n\t\t\tclouds[i].offset += settings.windSpeed / (i + 1);\r\n\t\t\tif (clouds[i].offset > sizes.card.width)\r\n\t\t\t\tclouds[i].offset = 0 + (clouds[i].offset - sizes.card.width);\r\n\t\t\tclouds[i].group.transform(\"t\" + clouds[i].offset + \",\" + 0);\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame(this.tick);\r\n\t};\r\n\r\n\tonResize = () => {\r\n\t\t// 📏 grab window and card sizes\r\n\t\tsizes.container.width = container.width();\r\n\t\tsizes.container.height = container.height();\r\n\t\tsizes.card.width = card.width();\r\n\t\tsizes.card.height = card.height();\r\n\t\tsizes.card.offset = card.offset();\r\n\r\n\t\t// 📐 update svg sizes\r\n\t\tinnerSVG.attr({\r\n\t\t\twidth: sizes.card.width,\r\n\t\t\theight: sizes.card.height,\r\n\t\t});\r\n\r\n\t\touterSVG.attr({\r\n\t\t\twidth: sizes.container.width,\r\n\t\t\theight: sizes.container.height,\r\n\t\t});\r\n\t};\r\n\r\n\tdrawCloud(cloud, i) {\r\n\t\t/* \r\n        ☁️ We want to create a shape thats loopable but that can also\r\n        be animated in and out. So we use Snap SVG to draw a shape\r\n        with 4 sections. The 2 ends and 2 arches the same width as\r\n        the card. So the final shape is about 4 x the width of the\r\n        card.\r\n        */\r\n\r\n\t\tvar space = settings.cloudSpace * i;\r\n\t\tvar height = space + settings.cloudHeight;\r\n\t\tvar arch = height + settings.cloudArch + Math.random() * settings.cloudArch;\r\n\t\tvar width = sizes.card.width;\r\n\r\n\t\tvar points = [];\r\n\t\tpoints.push(\"M\" + [-width, 0].join(\",\"));\r\n\t\tpoints.push([width, 0].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * 2, height / 2].join(\",\"));\r\n\t\tpoints.push([width, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * 0.5, arch].join(\",\"));\r\n\t\tpoints.push([0, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * -0.5, arch].join(\",\"));\r\n\t\tpoints.push([-width, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [-(width * 2), height / 2].join(\",\"));\r\n\t\tpoints.push([-width, 0].join(\",\"));\r\n\r\n\t\tvar path = points.join(\" \");\r\n\r\n\t\tif (!cloud.path) {\r\n\t\t\tcloud.path = cloud.group.path();\r\n\t\t}\r\n\r\n\t\tcloud.path.animate(\r\n\t\t\t{\r\n\t\t\t\td: path,\r\n\t\t\t},\r\n\t\t\t0\r\n\t\t);\r\n\t}\r\n\r\n\tmakeRain() {\r\n\t\t// 💧 This is where we draw one drop of rain\r\n\r\n\t\t// first we set the line width of the line, we use this\r\n\t\t// to dictate which svg group it'll be added to and\r\n\t\t// whether it'll generate a splash\r\n\t\tvar lineWidth = Math.random() * 3;\r\n\r\n\t\t// ⛈ line length is made longer for stormy weather\r\n\t\tvar lineLength = 14;\r\n\r\n\t\t// Start the drop at a random point at the top but leaving\r\n\t\t// a 20px margin\r\n\t\tvar x = Math.random() * (sizes.card.width - 40) + 20;\r\n\r\n\t\t// Draw the line\r\n\t\tvar line = innerRainHolder.path(\"M0,0 0,\" + lineLength).attr({\r\n\t\t\tfill: \"none\",\r\n\t\t\tstroke: \"#0000ff\",\r\n\t\t\tstrokeWidth: lineWidth,\r\n\t\t});\r\n\r\n\t\t// add the line to an array to we can keep track of how\r\n\t\t// many there are.\r\n\t\train.push(line);\r\n\r\n\t\t// Start the falling animation, calls onRainEnd when the\r\n\t\t// animation finishes.\r\n\t\tTweenMax.fromTo(\r\n\t\t\tline.node,\r\n\t\t\t1,\r\n\t\t\t{\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: 0 - lineLength,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdelay: Math.random(),\r\n\t\t\t\ty: sizes.card.height,\r\n\t\t\t\tease: Power2.easeIn,\r\n\t\t\t\tonComplete: this.onRainEnd,\r\n\t\t\t\tonCompleteParams: [line, lineWidth, x, \"rain\"],\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tonRainEnd = (line, width, x, type) => {\r\n\t\t// first lets get rid of the drop of rain 💧\r\n\t\tline.remove();\r\n\t\tline = null;\r\n\r\n\t\t// We also remove it from the array\r\n\t\tfor (var i in rain) {\r\n\t\t\tif (!rain[i].paper) rain.splice(i, 1);\r\n\t\t}\r\n\t};\r\n\r\n\tupdateSummaryText() {\r\n\t\tsummary.html(\"Rain\");\r\n\t\tTweenMax.fromTo(\r\n\t\t\tsummary,\r\n\t\t\t1.5,\r\n\t\t\t{ x: 30 },\r\n\t\t\t{ opacity: 1, x: 0, ease: Power4.easeOut }\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Get svg elements\r\n\t\tweatherContainer = Snap.select(\"#layer1\");\r\n\t\tinnerSVG = Snap(\"#inner\");\r\n\t\touterSVG = Snap(\"#outer\");\r\n\t\tsummary = $(\"#summary\");\r\n\t\tcontainer = $(\".container\");\r\n\t\tcard = $(\"#card\");\r\n\r\n\t\t// Grab cloud groups\r\n\t\tclouds = [\r\n\t\t\t{\r\n\t\t\t\tgroup: Snap.select(\"#cloud1\"),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tgroup: Snap.select(\"#cloud2\"),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tgroup: Snap.select(\"#cloud3\"),\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t//Rain\r\n\t\tinnerRainHolder = weatherContainer.group();\r\n\r\n\t\tthis.weatherAnimations();\r\n\t}\r\n\r\n    getDate(){\r\n        let date = new Date();\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        return `${days[date.getDay()]} ${date.getDate()} ${month[date.getMonth()]}`\r\n    }\r\n\r\n\trender() {\r\n\t\tconst { temp } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div id=\"card\" className=\"weather\">\r\n\t\t\t\t\t\t<svg id=\"inner\">\r\n\t\t\t\t\t\t\t<g id=\"layer3\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud3\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t\t<g id=\"layer2\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud2\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t\t<g id=\"layer1\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud1\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<div className=\"details\">\r\n\t\t\t\t\t\t\t<div className=\"temp\">\r\n\t\t\t\t\t\t\t\t{temp}\r\n\t\t\t\t\t\t\t\t<span>f</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<div id=\"date\">{this.getDate()}</div>\r\n\t\t\t\t\t\t\t\t<div id=\"summary\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<svg id=\"outer\"></svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rain;\r\n","import React, { Component } from \"react\";\r\nimport Snap from \"snapsvg-cjs\";\r\nimport $ from \"jquery\";\r\nimport { gsap, Power0, Power2, Power4 } from \"gsap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// 📝 Fetch all DOM nodes in jQuery and Snap SVG\r\nvar container;\r\nvar card;\r\nvar innerSVG;\r\nvar outerSVG;\r\nvar summary;\r\nvar weatherContainer;\r\nvar innerLeafHolder;\r\nvar leafMask;\r\nvar leaf;\r\nvar outerLeafHolder;\r\n// var date = $('#date');\r\n\r\n// create sizes object, we update this later\r\nvar sizes = {\r\n\tcontainer: { width: 0, height: 0 },\r\n\tcard: { width: 0, height: 0 },\r\n};\r\n\r\n// grab cloud groups\r\nvar clouds;\r\n\r\n// 🛠 app settings\r\n// in an object so the values can be animated in tweenmax\r\nvar settings = {\r\n\twindSpeed: 2,\r\n\tleafCount: 0,\r\n\tcloudHeight: 100,\r\n\tcloudSpace: 30,\r\n\tcloudArch: 50,\r\n\trenewCheck: 10,\r\n};\r\n\r\nvar tickCount = 0;\r\nvar leafs = [];\r\n\r\nclass Wind extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttemp: props.temp\r\n\t\t}\r\n\t}\r\n\r\n\tweatherAnimations() {\r\n\t\tthis.onResize();\r\n\r\n\t\t// draw clouds\r\n\t\tfor (let i = 0; i < clouds.length; i++) {\r\n\t\t\tclouds[i].offset = Math.random() * sizes.card.width;\r\n\t\t\tthis.drawCloud(clouds[i], i);\r\n\t\t}\r\n\r\n\t\tgsap.killTweensOf(summary);\r\n\t\tgsap.to(summary, 1, {\r\n\t\t\topacity: 0,\r\n\t\t\tx: -30,\r\n\t\t\tonComplete: this.updateSummaryText,\r\n\t\t\tease: Power4.easeIn,\r\n\t\t});\r\n\r\n\t\tgsap.to(settings, 3, { windSpeed: 3, ease: Power2.easeInOut });\r\n\t\tgsap.to(settings, 3, { leafCount: 5, ease: Power2.easeInOut });\r\n\r\n\t\t// 🏃 start animations\r\n\t\trequestAnimationFrame(this.tick);\r\n\t}\r\n\r\n\ttick = () => {\r\n\t\ttickCount++;\r\n\t\tvar check = tickCount % settings.renewCheck;\r\n\r\n\t\tif (check) {\r\n\t\t\tif (leafs.length < settings.leafCount) {\r\n\t\t\t\tthis.makeLeaf();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < clouds.length; i++) {\r\n\t\t\tclouds[i].offset += settings.windSpeed / (i + 1);\r\n\t\t\tif (clouds[i].offset > sizes.card.width)\r\n\t\t\t\tclouds[i].offset = 0 + (clouds[i].offset - sizes.card.width);\r\n\t\t\tclouds[i].group.transform(\"t\" + clouds[i].offset + \",\" + 0);\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame(this.tick);\r\n\t};\r\n\r\n\tonResize() {\r\n\t\t// 📏 grab window and card sizes\r\n\t\tsizes.container.width = container.width();\r\n\t\tsizes.container.height = container.height();\r\n\t\tsizes.card.width = card.width();\r\n\t\tsizes.card.height = card.height();\r\n\t\tsizes.card.offset = card.offset();\r\n\r\n\t\t// 📐 update svg sizes\r\n\t\tinnerSVG.attr({\r\n\t\t\twidth: sizes.card.width,\r\n\t\t\theight: sizes.card.height,\r\n\t\t});\r\n\r\n\t\touterSVG.attr({\r\n\t\t\twidth: sizes.container.width,\r\n\t\t\theight: sizes.container.height,\r\n\t\t});\r\n\r\n\t\t// 🍃 The leaf mask is for the leafs that float out of the\r\n\t\t// container, it is full window height and starts on the left\r\n\t\t// inline with the card\r\n\t\tleafMask.attr({\r\n\t\t\tx: sizes.card.offset.left,\r\n\t\t\ty: 0,\r\n\t\t\twidth: sizes.container.width - sizes.card.offset.left,\r\n\t\t\theight: sizes.container.height,\r\n\t\t});\r\n\t}\r\n\r\n\tdrawCloud(cloud, i) {\r\n\t\t/* \r\n        ☁️ We want to create a shape thats loopable but that can also\r\n        be animated in and out. So we use Snap SVG to draw a shape\r\n        with 4 sections. The 2 ends and 2 arches the same width as\r\n        the card. So the final shape is about 4 x the width of the\r\n        card.\r\n        */\r\n\r\n\t\tvar space = settings.cloudSpace * i;\r\n\t\tvar height = space + settings.cloudHeight;\r\n\t\tvar arch = height + settings.cloudArch + Math.random() * settings.cloudArch;\r\n\t\tvar width = sizes.card.width;\r\n\r\n\t\tvar points = [];\r\n\t\tpoints.push(\"M\" + [-width, 0].join(\",\"));\r\n\t\tpoints.push([width, 0].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * 2, height / 2].join(\",\"));\r\n\t\tpoints.push([width, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * 0.5, arch].join(\",\"));\r\n\t\tpoints.push([0, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * -0.5, arch].join(\",\"));\r\n\t\tpoints.push([-width, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [-(width * 2), height / 2].join(\",\"));\r\n\t\tpoints.push([-width, 0].join(\",\"));\r\n\r\n\t\tvar path = points.join(\" \");\r\n\t\tif (!cloud.path) cloud.path = cloud.group.path();\r\n\t\tcloud.path.animate(\r\n\t\t\t{\r\n\t\t\t\td: path,\r\n\t\t\t},\r\n\t\t\t0\r\n\t\t);\r\n\t}\r\n\r\n\tmakeLeaf() {\r\n\t\tvar scale = 0.5 + Math.random() * 0.5;\r\n\t\tvar newLeaf;\r\n\t\tvar areaY = sizes.card.height / 2;\r\n\t\tvar y = areaY + Math.random() * areaY;\r\n\t\tvar x;\r\n\t\tvar colors = [\"#76993E\", \"#4A5E23\", \"#6D632F\"];\r\n\t\tvar color = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n\t\tif (scale > 0.8) {\r\n\t\t\tnewLeaf = leaf.clone().appendTo(outerLeafHolder).attr({\r\n\t\t\t\tfill: color,\r\n\t\t\t});\r\n\t\t\ty = y + sizes.card.offset.top / 2;\r\n\r\n\t\t\tx = sizes.card.offset.left - 100;\r\n\t\t} else {\r\n\t\t\tnewLeaf = leaf.clone().appendTo(innerLeafHolder).attr({\r\n\t\t\t\tfill: color,\r\n\t\t\t});\r\n\t\t\tx = -100;\r\n\t\t}\r\n\r\n\t\tleafs.push(newLeaf);\r\n\r\n\t\t// let bezier = [{x:x, y:y}, {x: xBezier, y:(Math.random() * endY) + (endY / 3)}, {x: endX, y:endY}]\r\n\t\tgsap.fromTo(\r\n\t\t\tnewLeaf.node,\r\n\t\t\t2,\r\n\t\t\t{\r\n\t\t\t\trotation: Math.random() * 180,\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tscale: scale,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\trotation: Math.random() * 360,\r\n\t\t\t\tx: 1400,\r\n\t\t\t\ty: 200,\r\n\t\t\t\tonComplete: this.onLeafEnd,\r\n\t\t\t\tonCompleteParams: [newLeaf],\r\n\t\t\t\tease: Power0.easeIn,\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tonLeafEnd = (leaf) => {\r\n\t\tleaf.remove();\r\n\t\tleaf = null;\r\n\r\n\t\tfor (let i in leafs) {\r\n\t\t\tif (!leafs[i].paper) {\r\n\t\t\t\tleafs.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (leafs.length < settings.leafCount) {\r\n\t\t\tthis.makeLeaf();\r\n\t\t}\r\n\t};\r\n\r\n\tupdateSummaryText() {\r\n\t\tsummary.html(\"Windy\");\r\n\t\tgsap.fromTo(\r\n\t\t\tsummary,\r\n\t\t\t1.5,\r\n\t\t\t{ x: 30 },\r\n\t\t\t{ opacity: 1, x: 0, ease: Power4.easeOut }\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Get svg elements\r\n\t\tweatherContainer = Snap.select(\"#layer1\");\r\n\t\tinnerSVG = Snap(\"#inner\");\r\n\t\touterSVG = Snap(\"#outer\");\r\n\t\tsummary = $(\"#summary\");\r\n\t\tcontainer = $(\".container\");\r\n\t\tcard = $(\"#card\");\r\n\t\tleaf = Snap.select(\"#leaf\");\r\n\t\tleafMask = outerSVG.rect();\r\n\r\n\t\t// Grab cloud groups\r\n\t\tclouds = [\r\n\t\t\t{ group: Snap.select(\"#cloud1\") },\r\n\t\t\t{ group: Snap.select(\"#cloud2\") },\r\n\t\t\t{ group: Snap.select(\"#cloud3\") },\r\n\t\t];\r\n\r\n\t\t// Windy\r\n\t\touterLeafHolder = outerSVG.group();\r\n\t\tinnerLeafHolder = weatherContainer.group();\r\n\r\n\t\t// Set mask for leaf holder\r\n\t\touterLeafHolder.attr({\r\n\t\t\t\"clip-path\": leafMask,\r\n\t\t});\r\n\r\n\t\tthis.weatherAnimations();\r\n\t}\r\n\r\n    getDate(){\r\n        let date = new Date();\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        return `${days[date.getDay()]} ${date.getDate()} ${month[date.getMonth()]}`\r\n    }\r\n\r\n\trender() {\r\n\t\tconst { temp } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div id=\"card\" className=\"weather\">\r\n\t\t\t\t\t\t<svg id=\"inner\">\r\n\t\t\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\tid=\"leaf\"\r\n\t\t\t\t\t\t\t\t\td=\"M41.9,56.3l0.1-2.5c0,0,4.6-1.2,5.6-2.2c1-1,3.6-13,12-15.6c9.7-3.1,19.9-2,26.1-2.1c2.7,0-10,23.9-20.5,25 c-7.5,0.8-17.2-5.1-17.2-5.1L41.9,56.3z\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</defs>\r\n\t\t\t\t\t\t\t<g id=\"layer3\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud3\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t\t<g id=\"layer2\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud2\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t\t<g id=\"layer1\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud1\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<div className=\"details\">\r\n\t\t\t\t\t\t\t<div className=\"temp\">\r\n\t\t\t\t\t\t\t\t{temp}\r\n\t\t\t\t\t\t\t\t<span>f</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<div id=\"date\">{this.getDate()}</div>\r\n\t\t\t\t\t\t\t\t<div id=\"summary\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<svg id=\"outer\"></svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Wind;\r\n","import React, { Component } from \"react\";\r\nimport Snap from \"snapsvg-cjs\";\r\nimport $ from \"jquery\";\r\nimport { gsap, Power2, Power4 } from \"gsap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// 📝 Fetch all DOM nodes in jQuery and Snap SVG\r\nvar container;\r\nvar card;\r\nvar innerSVG;\r\nvar outerSVG;\r\nvar summary;\r\nvar sun;\r\nvar clouds;\r\n\r\n// create sizes object, we update this later\r\nvar sizes = {\r\n\tcontainer: { width: 0, height: 0 },\r\n\tcard: { width: 0, height: 0 },\r\n};\r\n\r\n// in an object so the values can be animated in tweenmax\r\nvar settings = {\r\n\twindSpeed: 2,\r\n\tleafCount: 0,\r\n\tcloudHeight: 100,\r\n\tcloudSpace: 30,\r\n\tcloudArch: 50,\r\n};\r\n\r\nclass Sun extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            temp: props.temp\r\n        }\r\n\t}\r\n\r\n\tweatherAnimations() {\r\n\t\tthis.onResize();\r\n\r\n\t\t// draw clouds\r\n\t\tfor (let i = 0; i < clouds.length; i++) {\r\n\t\t\tclouds[i].offset = Math.random() * sizes.card.width;\r\n\t\t\tthis.drawCloud(clouds[i], i);\r\n\t\t}\r\n\r\n\t\tgsap.killTweensOf(summary);\r\n\t\tgsap.to(summary, 1, {\r\n\t\t\topacity: 0,\r\n\t\t\tx: -30,\r\n\t\t\tonComplete: this.updateSummaryText,\r\n\t\t\tease: Power4.easeIn,\r\n\t\t});\r\n\r\n        gsap.to(settings, 3, {windSpeed: 20, ease: Power2.easeInOut});\r\n        gsap.to(sun.node, 4, {x: sizes.card.width / 2, y: sizes.card.height / 2, ease: Power2.easeInOut});\r\n\r\n\t\t// 🏃 start animations\r\n\t\trequestAnimationFrame(this.tick);\r\n\t}\r\n\r\n\ttick = () => {\r\n\r\n\t\tfor (let i = 0; i < clouds.length; i++) {\r\n\t\t\tif(clouds[i].offset > -(sizes.card.width * 1.5)) {\r\n                clouds[i].offset += settings.windSpeed / (i + 1)\r\n            }\r\n\r\n\t\t\tif(clouds[i].offset > sizes.card.width * 2.5) {\r\n                clouds[i].offset = -(sizes.card.width * 1.5)\r\n            }\r\n\r\n\t\t\tclouds[i].group.transform('t' + clouds[i].offset + ',' + 0);\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame(this.tick);\r\n\t};\r\n\r\n\tonResize() {\r\n\t\t// Grab window and card sizes\r\n\t\tsizes.container.width = container.width();\r\n\t\tsizes.container.height = container.height();\r\n\t\tsizes.card.width = card.width();\r\n\t\tsizes.card.height = card.height();\r\n\t\tsizes.card.offset = card.offset();\r\n\r\n\t\t// Update svg sizes\r\n\t\tinnerSVG.attr({\r\n\t\t\twidth: sizes.card.width,\r\n\t\t\theight: sizes.card.height,\r\n\t\t});\r\n\r\n\t\touterSVG.attr({\r\n\t\t\twidth: sizes.container.width,\r\n\t\t\theight: sizes.container.height,\r\n        });\r\n\t}\r\n\r\n\tdrawCloud(cloud, i) {\r\n\t\t/* We want to create a shape thats loopable but that can also\r\n        be animated in and out. So we use Snap SVG to draw a shape\r\n        with 4 sections. The 2 ends and 2 arches the same width as\r\n        the card. So the final shape is about 4 x the width of the\r\n        card. */\r\n\t\tvar space = settings.cloudSpace * i;\r\n\t\tvar height = space + settings.cloudHeight;\r\n\t\tvar arch = height + settings.cloudArch + Math.random() * settings.cloudArch;\r\n\t\tvar width = sizes.card.width;\r\n        var points = [];\r\n\r\n\t\tpoints.push(\"M\" + [-width, 0].join(\",\"));\r\n\t\tpoints.push([width, 0].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * 2, height / 2].join(\",\"));\r\n\t\tpoints.push([width, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * 0.5, arch].join(\",\"));\r\n\t\tpoints.push([0, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [width * -0.5, arch].join(\",\"));\r\n\t\tpoints.push([-width, height].join(\",\"));\r\n\t\tpoints.push(\"Q\" + [-(width * 2), height / 2].join(\",\"));\r\n\t\tpoints.push([-width, 0].join(\",\"));\r\n\r\n\t\tvar path = points.join(\" \");\r\n\t\tif (!cloud.path) {\r\n            cloud.path = cloud.group.path();\r\n        }\r\n\r\n\t\tcloud.path.animate( { d: path}, 0);\r\n\t}\r\n\r\n\tupdateSummaryText() {\r\n\t\tsummary.html(\"Sunny\");\r\n\t\tgsap.fromTo(\r\n\t\t\tsummary,\r\n\t\t\t1.5,\r\n\t\t\t{ x: 30 },\r\n\t\t\t{ opacity: 1, x: 0, ease: Power4.easeOut }\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Get svg elements\r\n\t\tinnerSVG = Snap(\"#inner\");\r\n\t\touterSVG = Snap(\"#outer\");\r\n\t\tsummary = $(\"#summary\");\r\n\t\tcontainer = $(\".container\");\r\n\t\tcard = $(\"#card\");\r\n        sun = Snap.select('#sun');\r\n\r\n\t\t// Grab cloud groups\r\n\t\tclouds = [\r\n\t\t\t{ group: Snap.select(\"#cloud1\") },\r\n\t\t\t{ group: Snap.select(\"#cloud2\") },\r\n\t\t\t{ group: Snap.select(\"#cloud3\") },\r\n\t\t];\r\n\r\n\t\tthis.weatherAnimations();\r\n\t}\r\n\r\n    getDate() {\r\n        let date = new Date();\r\n        var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        return `${days[date.getDay()]} ${date.getDate()} ${month[date.getMonth()]}`\r\n    }\r\n\r\n\trender() {\r\n        const { temp } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"background\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div id=\"card\" className=\"weather\">\r\n\t\t\t\t\t\t<svg id=\"inner\">\r\n                    I       <circle id=\"sun\" style= {{ fill: \"#F7ED47\" }} cx=\"0\" cy=\"0\" r=\"50\"/>\r\n\t\t\t\t\t\t\t<g id=\"layer3\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud3\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t\t<g id=\"layer2\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud2\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t\t<g id=\"layer1\"></g>\r\n\t\t\t\t\t\t\t<g id=\"cloud1\" className=\"cloud\"></g>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<div className=\"details\">\r\n\t\t\t\t\t\t\t<div className=\"temp\">\r\n\t\t\t\t\t\t\t\t{temp}\r\n\t\t\t\t\t\t\t\t<span>f</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<div id=\"date\">{this.getDate()}</div>\r\n\t\t\t\t\t\t\t\t<div id=\"summary\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<svg id=\"outer\"></svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Sun;\r\n","import './Login.css';\r\nimport React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  // login() {\r\n  //     fetch(\"http://localhost:8888/callback\").then((res) => {\r\n  //       console.log(\"hello\");\r\n  //       return res.json();\r\n  //     })\r\n  // }\r\n\r\n  // componentWillMount() {\r\n  //     this.login();\r\n  //}\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"containerLogin\">\r\n      <div id=\"login\">\r\n        <h1 className=\"text-uppercase\">Atmosphere</h1>\r\n        <p>Atmosphere is an app that uses your local weather forecast to generate and play unique Spotify playlist. (She\r\n          wanted us to add more user flow description here as well)</p>\r\n        <a href=\"/login\" className=\"btn btn-light\">Log in with Spotify <i className=\"fab fa-spotify fa-lg\"></i></a>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import \"./Login.css\";\r\nimport \"./player.css\";\r\nimport React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Player extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttoken: props.token,\r\n\t\t\tplaylistUri: props.playlistUri,\r\n\t\t\tdeviceId: \"\",\r\n\t\t\tloggedIn: false,\r\n\t\t\terror: \"\",\r\n\t\t\ttrackName: \"Track Name\",\r\n\t\t\tartistName: \"Artist Name\",\r\n\t\t\talbumName: \"Album Name\",\r\n\t\t\tplaying: false,\r\n\t\t\tposition: 0,\r\n\t\t\tduration: 0,\r\n\t\t\tconnected: false,\r\n\t\t};\r\n\r\n\t\tthis.playerCheckInterval = null;\r\n\t}\r\n\r\n\thandleLogin() {\r\n\t\tif (this.state.token !== \"\") {\r\n\t\t\tthis.setState({ loggedIn: true });\r\n\r\n\t\t\t// check every second for the player\r\n\t\t\tthis.playerCheckInterval = setInterval(() => this.checkForPlayer(), 1000);\r\n\t\t}\r\n\t}\r\n\r\n\tcheckForPlayer() {\r\n\t\tconst { token } = this.state;\r\n\r\n\t\tif (window.Spotify !== null && window.Spotify !== undefined) {\r\n\t\t\t// creating the player, so destroy the check interval\r\n\t\t\tclearInterval(this.playerCheckInterval);\r\n\r\n\t\t\tthis.player = new window.Spotify.Player({\r\n\t\t\t\tname: \"Atmosphere Weather Player\",\r\n\t\t\t\tgetOAuthToken: (cb) => {\r\n\t\t\t\t\tcb(token);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tthis.createEventHandlers();\r\n\r\n\t\t\tthis.player.connect();\r\n\t\t}\r\n\t}\r\n\r\n\tcreateEventHandlers() {\r\n\t\tthis.player.on(\"initialization_error\", (e) => {\r\n\t\t\tconsole.error(e);\r\n\t\t});\r\n\t\tthis.player.on(\"authentication_error\", (e) => {\r\n\t\t\tconsole.error(e);\r\n\t\t\tthis.setState({ loggedIn: false });\r\n\t\t});\r\n\t\tthis.player.on(\"account_error\", (e) => {\r\n\t\t\tconsole.error(e);\r\n\t\t});\r\n\t\tthis.player.on(\"playback_error\", (e) => {\r\n\t\t\tconsole.error(e);\r\n\t\t});\r\n\r\n\t\t// playback status updates\r\n\t\tthis.player.on(\"player_state_changed\", (state) =>\r\n\t\t\tthis.onStateChanged(state)\r\n\t\t);\r\n\r\n\t\t// ready\r\n\t\tthis.player.on(\"ready\", async (data) => {\r\n\t\t\tlet { device_id } = data;\r\n\t\t\tconsole.log(\"Time to rock'n'roll\");\r\n\t\t\tawait this.setState({ deviceId: device_id });\r\n\t\t\tthis.playAtmospherePlaylist();\r\n\t\t\tthis.transferPlayback();\r\n\t\t});\r\n\t}\r\n\r\n\tonStateChanged(state) {\r\n\t\t// if we're no longer listening to music, we'll get a null state\r\n\t\tif (state !== null) {\r\n\t\t\tconst {\r\n\t\t\t\tcurrent_track: currentTrack,\r\n\t\t\t\tposition,\r\n\t\t\t\tduration,\r\n\t\t\t} = state.track_window;\r\n\r\n\t\t\tconst trackName = currentTrack.name;\r\n\t\t\tconst albumName = currentTrack.album.name;\r\n\t\t\tconst artistName = currentTrack.artists\r\n\t\t\t\t.map((artist) => artist.name)\r\n\t\t\t\t.join(\", \");\r\n\t\t\tconst playing = !state.paused;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tposition,\r\n\t\t\t\tduration,\r\n\t\t\t\ttrackName,\r\n\t\t\t\talbumName,\r\n\t\t\t\tartistName,\r\n\t\t\t\tplaying,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonPrevClick() {\r\n\t\tthis.player.previousTrack();\r\n\t}\r\n\r\n\tonPlayClick() {\r\n\t\tthis.player.togglePlay();\r\n\t}\r\n\r\n\tonNextClick() {\r\n\t\tthis.player.nextTrack();\r\n\t}\r\n\r\n\ttransferPlayback() {\r\n\t\tconst { deviceId, token } = this.state;\r\n\t\tfetch(\"https://api.spotify.com/v1/me/player\", {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: {\r\n\t\t\t\tauthorization: `Bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tdevice_ids: [deviceId],\r\n\t\t\t\tplay: true,\r\n\t\t\t}),\r\n\t\t});\r\n\t}\r\n\r\n\tplayAtmospherePlaylist() {\r\n\t\tconst { deviceId, token, playlistUri } = this.state;\r\n\r\n\t\t// start playing the playlist\r\n\t\t// https://api.spotify.com/v1/me/player/play\r\n\t\tfetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\theaders: {\r\n\t\t\t\tauthorization: `Bearer ${token}`,\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tcontext_uri: playlistUri\r\n\t\t\t}),\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.handleLogin();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tloggedIn,\r\n\t\t\terror,\r\n\t\t\tplaying,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<div className=\"player\">\r\n\t\t\t\t\t\t\t\t{error && <p>Error: {error}</p>}\r\n\r\n\t\t\t\t\t\t\t\t{loggedIn ? (\r\n\t\t\t\t\t\t\t\t\t<div className=\"playerControls\">\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.onPrevClick()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* previous  */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/material/48/000000/rewind.png\" alt=\"previous track\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.onPlayClick()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{playing ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// pause\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/material/48/000000/pause--v1.png\" alt=\"pause button\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// play\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/material/48/000000/play--v2.png\" alt=\"play button\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => this.onNextClick()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* next  */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"https://img.icons8.com/material/48/000000/fast-forward--v1.png\" alt=\"next track\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<p>Connecting...</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Player;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./playlist.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass Playlist extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            token: props.token,\r\n            playlistUri: props.playlistUri,\r\n            tracks: [],\r\n            artists: [],\r\n            albums: [],\r\n            albumArt: []\r\n\t\t};\r\n    }\r\n\r\n    // GET \r\n    getTracksInPlaylist() {\r\n        const { token, playlistUri, tracks, artists, albums, albumArt } = this.state;\r\n        const temp = playlistUri.split(\":\");\r\n        const playlistId = temp[2];\r\n\r\n        fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?market=US`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\tauthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n\r\n\r\n            data.items.forEach(item => {\r\n                tracks.push(item.track.name);\r\n                artists.push(item.track.artists[0].name);\r\n                albums.push(item.track.album.name);\r\n                albumArt.push(item.track.album.images[0].url);\r\n            })\r\n\r\n            this.setState({\r\n                tracks: tracks,\r\n            });\r\n        })\r\n    }\r\n\r\n    // Need a function that somehow grabs the active track that's playing\r\n\tcomponentDidMount() {\r\n        this.getTracksInPlaylist()\r\n    }\r\n    \r\n\trender() {\r\n        const { \r\n            tracks,\r\n            artists,\r\n            albums,\r\n            albumArt\r\n         } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"playlist-rows\">\r\n                <Card className=\"playlist-header\">\r\n                    <Card.Header >Atmosphere Weather Playlist</Card.Header>\r\n                </Card>\r\n                <Card>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card.Body>1. <img width=\"50\" height=\"50\" src={albumArt[0]} alt=\"album art\"></img> {tracks[0]} - {artists[0]} - {albums[0]}</Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card>\r\n                <Card>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card.Body>2. <img width=\"50\" height=\"50\" src={albumArt[1]} alt=\"album art\"></img> {tracks[1]} - {artists[1]} - {albums[1]}</Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card>\r\n                <Card>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card.Body>3. <img width=\"50\" height=\"50\" src={albumArt[2]} alt=\"album art\"></img> {tracks[2]} - {artists[2]} - {albums[2]}</Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card>\r\n                <Card>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card.Body>4. <img width=\"50\" height=\"50\" src={albumArt[3]} alt=\"album art\"></img> {tracks[3]} - {artists[3]} - {albums[3]}</Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card>\r\n                <Card>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card.Body>5. <img width=\"50\" height=\"50\" src={albumArt[4]} alt=\"album art\"></img> {tracks[4]} - {artists[4]} - {albums[4]}</Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card>\r\n                <Card>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card.Body>6. <img width=\"50\" height=\"50\" src={albumArt[5]} alt=\"album art\"></img> {tracks[5]} - {artists[5]} - {albums[5]}</Card.Body>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Playlist;\r\n","import Snow from \"./Snow\";\r\nimport Rain from \"./Rain\";\r\nimport Wind from \"./Wind\";\r\nimport Sun from \"./Sun\";\r\nimport Player from \"./Player\";\r\nimport Playlist from \"./Playlist\";\r\nimport React, { Component } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./Login.css\";\r\nimport \"./main.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\t  authToken: props.authToken,\r\n\t\t  displayName: props.displayName,\r\n\t\t  playlistUri: props.playlistUri,\r\n\t\t  temp: props.temp,\r\n\t\t  weatherCard: props.weatherCard,\r\n\t\t  zipCode: props.zipCode\r\n\t  }\r\n\t}\r\n\t\r\n\tgetWeatherCard() {\r\n\t\tconst { weatherCard, temp } = this.state;\r\n\r\n\t\tif (weatherCard === \"wind\") {\r\n\t\t\treturn <Wind temp={temp}/>;\r\n\t\t} else if (weatherCard === \"sun\") {\r\n\t\t\treturn <Sun temp={temp}/>\r\n\t\t} else if (weatherCard === \"snow\") {\r\n\t\t\treturn <Snow temp={temp}/>;\r\n\t\t} else if (weatherCard === \"rain\") {\r\n\t\t\treturn <Rain temp={temp}/>;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tauthToken, \r\n\t\t  \tdisplayName,\r\n\t\t  \tplaylistUri,\r\n\t\t  \tzipCode\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborderBottom: \"2px solid pink\",\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Navbar>\r\n\t\t\t\t\t\t<Navbar.Text>{zipCode}</Navbar.Text>\r\n\t\t\t\t\t\t<Navbar.Toggle />\r\n\t\t\t\t\t\t<Navbar.Collapse className=\"justify-content-end\">\r\n\t\t\t\t\t\t\t<Navbar.Text>\r\n\t\t\t\t\t\t\t\t{displayName} <i className=\"fab fa-spotify fa-lg\"></i>\r\n\t\t\t\t\t\t\t</Navbar.Text>\r\n\t\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t\t</Navbar>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col className=\"weatherCard\">\r\n\t\t\t\t\t\t\t{/* which card is called */}\r\n\t\t\t\t\t\t\t{this.getWeatherCard()}\r\n\t\t\t\t\t\t\t<Player token={authToken} playlistUri={playlistUri} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Playlist token={authToken} playlistUri={playlistUri} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Login from './Login';\r\nimport Main from './Main';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nfunction getHashParams() {\r\n  var hashParams = {};\r\n  var e,\r\n    r = /([^&;=]+)=?([^&;]*)/g,\r\n    q = window.location.hash.substring(1);\r\n  while ((e = r.exec(q))) {\r\n    hashParams[e[1]] = decodeURIComponent(e[2]);\r\n  }\r\n  return hashParams;\r\n}\r\n\r\nconst params = getHashParams();\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <div>\r\n      <Route exact path=\"/\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/main\">\r\n        <Main authToken={params.authToken} displayName={params.displayName} playlistUri={params.playlistUri} temp={params.temp} weatherCard={params.weatherCard} zipCode={params.zipCode}/>\r\n      </Route>\r\n    </div>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}